@inherits BaseComponent
@page "/tasks"
@using Taskmaster.Services

@inject HttpClient Http
@inject ITaskmasterApi taskmasterApi
@inject NavigationManager _nav

<PageTitle>Tasks</PageTitle>
<div style="display: flex;">
    <h1>Tasks</h1>
    <button id="create-task-btn" class="btn btn-primary" @onclick="AddTaskBtnClicked">
        <i class="bi bi-house-add-fill"></i>
        Add Task
    </button>
</div>

@if (tasks == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Assignee</th>
                <th>Due</th>
                <th>Done</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var task in tasks)
            {
                <tr>
                    <td>@task.ID</td>
                    <td>@task.Name</td>
                    <td>Assignee</td>
                    <td>Due date</td>
                    <td style="text-align: center;">
                        <input type="checkbox" checked="@task.IsComplete" @onchange="(e) => CompleteCbValueChanged(e)" />
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<TaskmasterModels.Task>? tasks;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        tasks = await taskmasterApi.GetHouseholdTasks(CurrentMember.HouseholdId);
    }

    public void CompleteCbValueChanged(ChangeEventArgs e)
    {

        string s = "";
    }

    private void AddTaskBtnClicked()
    {
        _nav.NavigateTo("/tasks/task");
    }

}
